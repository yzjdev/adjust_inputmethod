public Drawables(Context context) {
            final int targetSdkVersion = context.getApplicationInfo().targetSdkVersion;
            mIsRtlCompatibilityMode = targetSdkVersion < VERSION_CODES.JELLY_BEAN_MR1
                    || !context.getApplicationInfo().hasRtlSupport();
            mOverride = false;
        }




    /**
     * Collects a {@link ViewTranslationRequest} which represents the content to be translated in
     * the view.
     *
     * <p>NOTE: When overriding the method, it should not collect a request to translate this
     * TextView if it is displaying a password.
     *
     * @param supportedFormats the supported translation format. The value could be {@link
     *                         android.view.translation.TranslationSpec#DATA_FORMAT_TEXT}.
     * @param requestsCollector {@link Consumer} to receiver the {@link ViewTranslationRequest}
     *                                         which contains the information to be translated.
     */
    @Override
    public void onCreateViewTranslationRequest(@NonNull int[] supportedFormats,
                                               @NonNull Consumer<ViewTranslationRequest> requestsCollector) {
        if (supportedFormats == null || supportedFormats.length == 0) {
            if (UiTranslationController.DEBUG) {
                Log.w(LOG_TAG, "Do not provide the support translation formats.");
            }
            return;
        }
        ViewTranslationRequest.Builder requestBuilder =
                new ViewTranslationRequest.Builder(getAutofillId());
        // Support Text translation
        if (ArrayUtils.contains(supportedFormats, TranslationSpec.DATA_FORMAT_TEXT)) {
            if (mText == null || mText.length() == 0) {
                if (UiTranslationController.DEBUG) {
                    Log.w(LOG_TAG, "Cannot create translation request for the empty text.");
                }
                return;
            }
            boolean isPassword = isAnyPasswordInputType() || hasPasswordTransformationMethod();
            if (isTextEditable() || isPassword) {
                Log.w(LOG_TAG, "Cannot create translation request. editable = "
                        + isTextEditable() + ", isPassword = " + isPassword);
                return;
            }
            // TODO(b/176488462): apply the view's important for translation
            requestBuilder.setValue(ViewTranslationRequest.ID_TEXT,
                    TranslationRequestValue.forText(mText));
            if (!TextUtils.isEmpty(getContentDescription())) {
                requestBuilder.setValue(ViewTranslationRequest.ID_CONTENT_DESCRIPTION,
                        TranslationRequestValue.forText(getContentDescription()));
            }
        }
        requestsCollector.accept(requestBuilder.build());
    }



    /**
     * Collects a {@link ViewTranslationRequest} which represents the content to be translated in
     * the view.
     *
     * <p>NOTE: When overriding the method, it should not collect a request to translate this
     * TextView if it is displaying a password.
     *
     * @param supportedFormats the supported translation format. The value could be {@link
     *                         android.view.translation.TranslationSpec#DATA_FORMAT_TEXT}.
     * @param requestsCollector {@link Consumer} to receiver the {@link ViewTranslationRequest}
     *                                         which contains the information to be translated.
     */
    @Override
    public void onCreateViewTranslationRequest(@NonNull int[] supportedFormats,
                                               @NonNull Consumer<ViewTranslationRequest> requestsCollector) {
        if (supportedFormats == null || supportedFormats.length == 0) {
            if (UiTranslationController.DEBUG) {
                Log.w(LOG_TAG, "Do not provide the support translation formats.");
            }
            return;
        }
        ViewTranslationRequest.Builder requestBuilder =
                new ViewTranslationRequest.Builder(getAutofillId());
        // Support Text translation
        if (ArrayUtils.contains(supportedFormats, TranslationSpec.DATA_FORMAT_TEXT)) {
            if (mText == null || mText.length() == 0) {
                if (UiTranslationController.DEBUG) {
                    Log.w(LOG_TAG, "Cannot create translation request for the empty text.");
                }
                return;
            }
            boolean isPassword = isAnyPasswordInputType() || hasPasswordTransformationMethod();
            if (isTextEditable() || isPassword) {
                Log.w(LOG_TAG, "Cannot create translation request. editable = "
                        + isTextEditable() + ", isPassword = " + isPassword);
                return;
            }
            // TODO(b/176488462): apply the view's important for translation
            requestBuilder.setValue(ViewTranslationRequest.ID_TEXT,
                    TranslationRequestValue.forText(mText));
            if (!TextUtils.isEmpty(getContentDescription())) {
                requestBuilder.setValue(ViewTranslationRequest.ID_CONTENT_DESCRIPTION,
                        TranslationRequestValue.forText(getContentDescription()));
            }
        }
        requestsCollector.accept(requestBuilder.build());
    }